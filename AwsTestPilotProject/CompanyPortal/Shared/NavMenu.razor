@* @inject NavigationManager Navigation
@inject IConfiguration Configuration

<AuthorizeView>
    <Authorized>
        <div class="top-row ps-3 navbar navbar-dark">
            <div class="container-fluid">
                <a class="navbar-brand" href="">Swamp Dragon Inn</a>
                <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
                    <span class="navbar-toggler-icon"></span>
                </button>
            </div>
        </div>

        <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
            <nav class="flex-column">
                <div class="nav-item px-3">
                    <button class="btn btn-link nav-link" @onclick="GoHome">
                        <span class="oi oi-home" aria-hidden="true"></span> Home
                    </button>
                </div>
                <div class="nav-item px-3">
                    <button class="btn btn-link nav-link" @onclick="Logout">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                    </button>
                </div>
            </nav>
        </div>
    </Authorized>
</AuthorizeView>

@code 
{
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void GoHome()
    {
        var homeUrl = Configuration["ToolUrls:home"];
        if (!string.IsNullOrEmpty(homeUrl))
        {
            Navigation.NavigateTo(homeUrl, true);
        }
    }
    
    private void Logout()
    {
        Navigation.NavigateTo("/authentication/signout", true);
    }
} *@
